{"ast":null,"code":"import _classCallCheck from \"/home/rick/Desktop/projects/react/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rick/Desktop/projects/react/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rick/Desktop/projects/react/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rick/Desktop/projects/react/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rick/Desktop/projects/react/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/rick/Desktop/projects/react/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/rick/Desktop/projects/react/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Todos from './components/Todos';\nimport './App.css';\nimport Quote from './components/Quote';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      quote: {\n        text: '',\n        author: ''\n      }\n    };\n    _this.refreshQuote = _this.refreshQuote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refreshQuote();\n    }\n  }, {\n    key: \"refreshQuote\",\n    value: function refreshQuote() {\n      var _this2 = this;\n\n      fetch(\"https://cors-anywhere.herokuapp.com/http://quotesondesign.com/wp-json/posts?filter[orderby]=rand&filter[posts_per_page]=1\").then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        //JSON.stringify(response);\n        //since I will be getting a list of one item.\n        _this2.setState({\n          quote: {\n            text: response[0].content,\n            author: response[0].title\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"quote-box\",\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"My App\"), React.createElement(Quote, {\n        quote: this.state.quote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"new-quote\",\n        onClick: this.refreshQuote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Refresh\"), React.createElement(\"a\", {\n        id: \"tweet-quote\",\n        href: \"twitter/intent/tweet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Tweet This quote\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/rick/Desktop/projects/react/my-app/src/App.js"],"names":["React","Component","Todos","Quote","App","props","state","quote","text","author","refreshQuote","bind","fetch","then","res","json","response","setState","content","title"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAC;AACJC,QAAAA,IAAI,EAAC,EADD;AAEJC,QAAAA,MAAM,EAAC;AAFH;AADK,KAAb;AAMA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AARgB;AASjB;;;;wCAEkB;AACjB,WAAKD,YAAL;AACD;;;mCAEa;AAAA;;AACZE,MAAAA,KAAK,CAAC,2HAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,OADT,EAECF,IAFD,CAEM,UAACG,QAAD,EAAY;AAChB;AACA;AACA,QAAA,MAAI,CAACC,QAAL,CACE;AACEV,UAAAA,KAAK,EAAC;AACJC,YAAAA,IAAI,EAACQ,QAAQ,CAAC,CAAD,CAAR,CAAYE,OADb;AAEJT,YAAAA,MAAM,EAACO,QAAQ,CAAC,CAAD,CAAR,CAAYG;AAFf;AADR,SADF;AAQD,OAbD;AAcD;;;6BAEQ;AACP,aACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAoB,QAAA,SAAS,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,OAAO,EAAE,KAAKG,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE;AAAG,QAAA,EAAE,EAAC,aAAN;AAAoB,QAAA,IAAI,EAAC,sBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CADF;AAQD;;;;EA1CeT,S;;AA6ClB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Todos from './components/Todos'\nimport './App.css';\nimport Quote from './components/Quote';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      quote:{\n        text:'',\n        author:''\n      }\n    }\n    this.refreshQuote = this.refreshQuote.bind(this);\n  }\n  \n  componentDidMount(){\n    this.refreshQuote();\n  }\n\n  refreshQuote(){\n    fetch(\"https://cors-anywhere.herokuapp.com/http://quotesondesign.com/wp-json/posts?filter[orderby]=rand&filter[posts_per_page]=1\")\n    .then(res=>res.json())\n    .then((response)=>{\n      //JSON.stringify(response);\n      //since I will be getting a list of one item.\n      this.setState(\n        {\n          quote:{\n            text:response[0].content,\n            author:response[0].title\n          }\n        }\n      )\n    });\n  }\n\n  render() {\n    return (\n      <div id='quote-box' className=\"App\">\n        <h1>My App</h1>\n        <Quote quote={this.state.quote}/>\n        <button id='new-quote' onClick={this.refreshQuote}>Refresh</button>\n        <a id='tweet-quote' href='twitter/intent/tweet'>Tweet This quote</a>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}