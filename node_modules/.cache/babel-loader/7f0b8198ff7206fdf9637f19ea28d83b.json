{"ast":null,"code":"import _toConsumableArray from \"/home/rick/Desktop/projects/react/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/rick/Desktop/projects/react/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rick/Desktop/projects/react/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rick/Desktop/projects/react/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rick/Desktop/projects/react/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rick/Desktop/projects/react/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/rick/Desktop/projects/react/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/rick/Desktop/projects/react/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Todos from './components/Todos';\nimport './App.css';\nimport Quote from './components/Quote';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      quotes: [] //this.refreshQuote = this.refreshQuote.bind(this);\n\n    };\n    _this.changeQuote = _this.changeQuote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refreshQuote();\n      console.log(this.state.quotes);\n    }\n  }, {\n    key: \"refreshQuote\",\n    value: function refreshQuote() {\n      var _this2 = this;\n\n      fetch(\"https://cors-anywhere.herokuapp.com/http://quotesondesign.com/wp-json/posts?filter[orderby]=rand&filter[posts_per_page]=20\").then(function (res) {\n        return res.json();\n      }).then(function (response) {\n        //JSON.stringify(response);\n        //console.log(response);\n        //since I will be getting a list of one item.\n        response.map(function (x) {\n          var mQuote = {\n            text: x.content,\n            author: x.title\n          }(_this2.state.quotes) ? _this2.setState({\n            quotes: [].concat(_toConsumableArray(_this2.state.quotes), [mQuote])\n          }) : _this2.setState({\n            quotes: [mQuote]\n          });\n        });\n      });\n    }\n  }, {\n    key: \"changeQuote\",\n    value: function changeQuote() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"quote-box\",\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"My App\"), React.createElement(Quote, {\n        quote: this.state.quote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"new-quote\",\n        onClick: this.refreshQuote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Refresh\"), React.createElement(\"a\", {\n        id: \"tweet-quote\",\n        href: \"twitter/intent/tweet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Tweet This quote\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/rick/Desktop/projects/react/my-app/src/App.js"],"names":["React","Component","Todos","Quote","App","props","state","quotes","changeQuote","bind","refreshQuote","console","log","fetch","then","res","json","response","map","x","mQuote","text","content","author","title","setState","quote"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAC,EADI,CAGb;;AAHa,KAAb;AAIA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AANgB;AAOjB;;;;wCAEkB;AACjB,WAAKC,YAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,MAAvB;AACD;;;mCAEa;AAAA;;AACZM,MAAAA,KAAK,CAAC,4HAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,OADT,EAECF,IAFD,CAEM,UAACG,QAAD,EAAY;AAChB;AACA;AACA;AACAA,QAAAA,QAAQ,CAACC,GAAT,CAAa,UAAAC,CAAC,EAAE;AACd,cAAIC,MAAM,GAAG;AACXC,YAAAA,IAAI,EAACF,CAAC,CAACG,OADI;AAEXC,YAAAA,MAAM,EAACJ,CAAC,CAACK;AAFE,YAIZ,MAAI,CAAClB,KAAL,CAAWC,MAJC,IAIQ,MAAI,CAACkB,QAAL,CAAc;AACjClB,YAAAA,MAAM,+BAAK,MAAI,CAACD,KAAL,CAAWC,MAAhB,IAAuBa,MAAvB;AAD2B,WAAd,CAJR,GAMT,MAAI,CAACK,QAAL,CAAc;AAChBlB,YAAAA,MAAM,EAAC,CAACa,MAAD;AADS,WAAd,CANJ;AASD,SAVD;AAWD,OAjBD;AAkBD;;;kCAEY,CAEZ;;;6BAEQ;AACP,aACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAoB,QAAA,SAAS,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWoB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,OAAO,EAAE,KAAKhB,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIE;AAAG,QAAA,EAAE,EAAC,aAAN;AAAoB,QAAA,IAAI,EAAC,sBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CADF;AAQD;;;;EAjDeT,S;;AAoDlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Todos from './components/Todos'\nimport './App.css';\nimport Quote from './components/Quote';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      quotes:[]\n    }\n    //this.refreshQuote = this.refreshQuote.bind(this);\n    this.changeQuote = this.changeQuote.bind(this);\n  }\n  \n  componentDidMount(){\n    this.refreshQuote();\n    console.log(this.state.quotes);\n  }\n\n  refreshQuote(){\n    fetch(\"https://cors-anywhere.herokuapp.com/http://quotesondesign.com/wp-json/posts?filter[orderby]=rand&filter[posts_per_page]=20\")\n    .then(res=>res.json())\n    .then((response)=>{\n      //JSON.stringify(response);\n      //console.log(response);\n      //since I will be getting a list of one item.\n      response.map(x=>{\n        let mQuote = {\n          text:x.content,\n          author:x.title\n        }\n        (this.state.quotes)? this.setState({\n          quotes:[...this.state.quotes,mQuote]\n        }): this.setState({\n          quotes:[mQuote]\n        });\n      })\n    });\n  }\n\n  changeQuote(){\n\n  }\n\n  render() {\n    return (\n      <div id='quote-box' className=\"App\">\n        <h1>My App</h1>\n        <Quote quote={this.state.quote}/>\n        <button id='new-quote' onClick={this.refreshQuote}>Refresh</button>\n        <a id='tweet-quote' href='twitter/intent/tweet'>Tweet This quote</a>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}